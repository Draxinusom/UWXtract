/*************
	UWXtract - Ultima Underworld Extractor

	Palette extractor

	Extracts the various image palettes to files (CSV list or GIMP GPL)

	Note:	Color values range from 0-63 so values are multiplied by 4 to fit standard RGB color values
			This appears to be how it's handled in game from screenshots generated by it (not DOSBox)

	Todo:
		Should probably make all the extra 256 color palette files a loop instead of a full copies
*************/
#include "UWXtract.h"

int PALXtract(
	const bool IsUW2,
	const std::string UWPath,
	const std::string OutPath,
	const bool IsGIMP
) {
// Reusable variable for setting target file names
	char TempPath[256];

	CreateFolder(OutPath);

// Primary PALS data used by other palettes so open outside of export block
	sprintf(TempPath, "%s\\DATA\\PALS.DAT", UWPath.c_str());
	FILE* PALS = fopen(TempPath, "rb");

// PALS.DAT
	{
	// Get palette count -- Varies between UW1 (8) & UW2 (11)
		fseek(PALS, 0, SEEK_END);
		int PaletteCount = (ftell(PALS) / 768); // 256 colors / 3 bytes each (RGB)
		fseek(PALS, 0, SEEK_SET);

		if (IsGIMP) {
			for (int i = 0; i < PaletteCount; i++) {
				sprintf(TempPath, "%s\\PALS_%02u.gpl", OutPath.c_str(), i);
				FILE* PALOut = fopen(TempPath, "w");

				fprintf(PALOut, "GIMP Palette\nName: UltimaUnderworld%u-%X\nColumns: 8\n#\n", IsUW2 ? 2 : 1, i);

				for (int index = 0; index < 256; index++) {
					unsigned char buffer[3];
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%3u "		// Red
						"%3u "		// Green
						"%3u%s\n",	// Blue/ColorName -- Only setting for Alpha
						buffer[0] * 4,								// Red
						buffer[1] * 4,								// Green
						buffer[2] * 4, index == 0 ? "\tAlpha" : ""	// Blue/ColorName
					);
				}
				fclose(PALOut);
			}
		}
		else {
			sprintf(TempPath, "%s\\PALS.csv", OutPath.c_str());
			FILE* PALOut = fopen(TempPath, "w");

			fprintf(PALOut, "Palette,Index,Hex,Red,Green,Blue\n");
			for (int i = 0; i < PaletteCount; i++) {
				for (int index = 0; index < 256; index++) {
					unsigned char buffer[3];
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%u,"			// Palette
						"%u,"			// Index
						"%02X%02X%02X,"	// Hex
						"%u,"			// Red
						"%u,"			// Green
						"%u\n",			// Blue
						i,											// Palette
						index,										// Index
						buffer[0] * 4, buffer[1] * 4, buffer[2] * 4,// Hex
						buffer[0] * 4,								// Red
						buffer[1] * 4,								// Green
						buffer[2] * 4								// Blue
					);
				}
			}
			fclose(PALOut);
		}
	}

// ALLPALS.DAT
	{
		sprintf(TempPath, "%s\\DATA\\ALLPALS.DAT", UWPath.c_str());
		FILE* ALLPALS = fopen(TempPath, "rb");

		if (IsGIMP) {
			for (int PALTarget = 0; PALTarget < 32; PALTarget++) {
				sprintf(TempPath, "%s\\ALLPALS_%02u.gpl", OutPath.c_str(), PALTarget);
				FILE* PALOut = fopen(TempPath, "w");

				fprintf(PALOut, "GIMP Palette\nName: UltimaUnderworld%u-Aux-%02u\nColumns: 8\n#\n", IsUW2 ? 2 : 1, PALTarget);

				for (int index = 0; index < 16; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(ALLPALS);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%3u "		// Red
						"%3u "		// Green
						"%3u%s\n",	// Blue/ColorName -- Only set if index 0 and target color index is 0 (no idea if this is correct or ever relevant)
						buffer[0] * 4,													// Red
						buffer[1] * 4,													// Green
						buffer[2] * 4, targetindex == 0 && index == 0 ? "\tAlpha" : ""	// Blue/ColorName
					);
				}
				fclose(PALOut);
			}
		}
		else {
			sprintf(TempPath, "%s\\ALLPALS.csv", OutPath.c_str());
			FILE* PALOut = fopen(TempPath, "w");

			fprintf(PALOut, "Palette,Index,Hex,Red,Green,Blue\n");

			for (int PALTarget = 0; PALTarget < 32; PALTarget++) {
				for (int index = 0; index < 16; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(ALLPALS);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%u,"			// Palette
						"%u,"			// Index
						"%02X%02X%02X,"	// Hex
						"%u,"			// Red
						"%u,"			// Green
						"%u\n",			// Blue
						PALTarget,									// Palette
						index,										// Index
						buffer[0] * 4, buffer[1] * 4, buffer[2] * 4,// Hex
						buffer[0] * 4,								// Red
						buffer[1] * 4,								// Green
						buffer[2] * 4								// Blue
					);
				}
			}
			fclose(PALOut);
		}
		fclose(ALLPALS);
	}

// LIGHT.DAT
	{
		sprintf(TempPath, "%s\\DATA\\LIGHT.DAT", UWPath.c_str());
		FILE* LIGHT = fopen(TempPath, "rb");

		if (IsGIMP) {
			for (int PALTarget = 0; PALTarget < 16; PALTarget++) {
				sprintf(TempPath, "%s\\LIGHT_%02u.gpl", OutPath.c_str(), PALTarget);
				FILE* PALOut = fopen(TempPath, "w");

				fprintf(PALOut, "GIMP Palette\nName: UltimaUnderworld%u-Light-%02u\nColumns: 8\n#\n", IsUW2 ? 2 : 1, PALTarget);

				for (int index = 0; index < 256; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(LIGHT);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%3u "		// Red
						"%3u "		// Green
						"%3u%s\n",	// Blue/ColorName -- Only set if index 0 and target color index is 0 (no idea if this is correct or ever relevant)
						buffer[0] * 4,													// Red
						buffer[1] * 4,													// Green
						buffer[2] * 4, targetindex == 0 && index == 0 ? "\tAlpha" : ""	// Blue/ColorName
					);
				}
				fclose(PALOut);
			}
		}
		else {
			sprintf(TempPath, "%s\\LIGHT.csv", OutPath.c_str());
			FILE* PALOut = fopen(TempPath, "w");

			fprintf(PALOut, "Palette,Index,Hex,Red,Green,Blue\n");

			for (int PALTarget = 0; PALTarget < 16; PALTarget++) {
				for (int index = 0; index < 256; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(LIGHT);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%u,"			// Palette
						"%u,"			// Index
						"%02X%02X%02X,"	// Hex
						"%u,"			// Red
						"%u,"			// Green
						"%u\n",			// Blue
						PALTarget,									// Palette
						index,										// Index
						buffer[0] * 4, buffer[1] * 4, buffer[2] * 4,// Hex
						buffer[0] * 4,								// Red
						buffer[1] * 4,								// Green
						buffer[2] * 4								// Blue
					);
				}
			}
			fclose(PALOut);
		}
		fclose(LIGHT);
	}

// MONO.DAT
	{
		sprintf(TempPath, "%s\\DATA\\MONO.DAT", UWPath.c_str());
		FILE* MONO = fopen(TempPath, "rb");

		if (IsGIMP) {
			for (int PALTarget = 0; PALTarget < 16; PALTarget++) {
				sprintf(TempPath, "%s\\MONO_%02u.gpl", OutPath.c_str(), PALTarget);
				FILE* PALOut = fopen(TempPath, "w");

				fprintf(PALOut, "GIMP Palette\nName: UltimaUnderworld%u-Mono-%02u\nColumns: 8\n#\n", IsUW2 ? 2 : 1, PALTarget);

				for (int index = 0; index < 256; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(MONO);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%3u "		// Red
						"%3u "		// Green
						"%3u%s\n",	// Blue/ColorName -- Only set if index 0 and target color index is 0 (no idea if this is correct or ever relevant)
						buffer[0] * 4,													// Red
						buffer[1] * 4,													// Green
						buffer[2] * 4, targetindex == 0 && index == 0 ? "\tAlpha" : ""	// Blue/ColorName
					);
				}
				fclose(PALOut);
			}
		}
		else {
			sprintf(TempPath, "%s\\MONO.csv", OutPath.c_str());
			FILE* PALOut = fopen(TempPath, "w");

			fprintf(PALOut, "Palette,Index,Hex,Red,Green,Blue\n");

			for (int PALTarget = 0; PALTarget < 16; PALTarget++) {
				for (int index = 0; index < 256; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(MONO);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%u,"			// Palette
						"%u,"			// Index
						"%02X%02X%02X,"	// Hex
						"%u,"			// Red
						"%u,"			// Green
						"%u\n",			// Blue
						PALTarget,									// Palette
						index,										// Index
						buffer[0] * 4, buffer[1] * 4, buffer[2] * 4,// Hex
						buffer[0] * 4,								// Red
						buffer[1] * 4,								// Green
						buffer[2] * 4								// Blue
					);
				}
			}
			fclose(PALOut);
		}
		fclose(MONO);
	}

// WEAPONS/WEAP.CM
	{
		std::string WEAPPALSName = IsUW2 ? "WEAP" : "WEAPONS";	// Filename varies between games
		sprintf(TempPath, "%s\\DATA\\%s.CM", UWPath.c_str(), WEAPPALSName.c_str());
		FILE* WEAPPALS = fopen(TempPath, "rb");

		fseek(WEAPPALS, 0, SEEK_END);
		int PaletteCount = (ftell(WEAPPALS) / 16); // 16 indexes / 1 byte each - Should be 2 for UW1 & 4 for UW2 - palette 0 matches AUXPAL 30 for both
		fseek(WEAPPALS, 0, SEEK_SET);

		

		if (IsGIMP) {
			for (int PALTarget = 0; PALTarget < PaletteCount; PALTarget++) {
				sprintf(TempPath, "%s\\%s_%02u.gpl", OutPath.c_str(), WEAPPALSName.c_str(), PALTarget);
				FILE* PALOut = fopen(TempPath, "w");

				fprintf(PALOut, "GIMP Palette\nName: UltimaUnderworld%u-%s-%02u\nColumns: 8\n#\n", IsUW2 ? 2 : 1, WEAPPALSName.c_str(), PALTarget);

				for (int index = 0; index < 16; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(WEAPPALS);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%3u "		// Red
						"%3u "		// Green
						"%3u%s\n",	// Blue/ColorName -- Only set if index 0 and target color index is 0 (no idea if this is correct or ever relevant)
						buffer[0] * 4,													// Red
						buffer[1] * 4,													// Green
						buffer[2] * 4, targetindex == 0 && index == 0 ? "\tAlpha" : ""	// Blue/ColorName
					);
				}
				fclose(PALOut);
			}
		}
		else {
			sprintf(TempPath, "%s\\%s.csv", OutPath.c_str(), WEAPPALSName.c_str());
			FILE* PALOut = fopen(TempPath, "w");

			fprintf(PALOut, "Palette,Index,Hex,Red,Green,Blue\n");

			for (int PALTarget = 0; PALTarget < PaletteCount; PALTarget++) {
				for (int index = 0; index < 16; index++) {
					unsigned char buffer[3];
					unsigned int targetindex = fgetc(WEAPPALS);

					fseek(PALS, targetindex * 3, SEEK_SET);
					fread(buffer, 1, 3, PALS);

					fprintf(
						PALOut,
						"%u,"			// Palette
						"%u,"			// Index
						"%02X%02X%02X,"	// Hex
						"%u,"			// Red
						"%u,"			// Green
						"%u\n",			// Blue
						PALTarget,									// Palette
						index,										// Index
						buffer[0] * 4, buffer[1] * 4, buffer[2] * 4,// Hex
						buffer[0] * 4,								// Red
						buffer[1] * 4,								// Green
						buffer[2] * 4								// Blue
					);
				}
			}
			fclose(PALOut);
		}
		fclose(WEAPPALS);
	}
	fclose(PALS);

	printf("Palettes extracted to %s\n", OutPath.c_str());
	return 0;
}
